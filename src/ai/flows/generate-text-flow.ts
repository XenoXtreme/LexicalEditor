
'use server';

/**
 * @fileOverview AI-powered text generation flow.
 * This file defines a Genkit flow that uses a generative AI model to generate text
 * based on a user-provided prompt.
 *
 * @module ai/flows/generate-text
 * @interface GenerateTextInput - The input type for the generateText function.
 * @interface GenerateTextOutput - The output type for the generateText function.
 * @function generateText - A function that handles the text generation process.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateTextInputSchema = z.object({
  prompt: z.string().describe('The user-provided prompt for text generation.'),
});
export type GenerateTextInput = z.infer<typeof GenerateTextInputSchema>;

const GenerateTextOutputSchema = z.object({
  generatedText: z.string().describe('The text generated by the AI.'),
});
export type GenerateTextOutput = z.infer<typeof GenerateTextOutputSchema>;

/**
 * generateText: This is a wrapper function that calls the generateTextFlow.
 */
export async function generateText(input: GenerateTextInput): Promise<GenerateTextOutput> {
  return generateTextFlow(input);
}

const generateTextPrompt = ai.definePrompt({
  name: 'generateTextPrompt',
  input: {schema: GenerateTextInputSchema},
  output: {schema: GenerateTextOutputSchema},
  prompt: `You are an AI assistant that generates text based on user prompts.
Please provide a creative and relevant response to the following prompt.
User Prompt: {{{prompt}}}
Generated Text:`,
});

const generateTextFlow = ai.defineFlow(
  {
    name: 'generateTextFlow',
    inputSchema: GenerateTextInputSchema,
    outputSchema: GenerateTextOutputSchema,
  },
  async (input) => {
    const {output} = await generateTextPrompt(input);
    if (!output) {
      // This case should ideally be handled by Zod schema validation if output is non-nullable
      // or specific Gemini error handling.
      // For now, we ensure an object is returned to satisfy the schema if Gemini somehow returns null.
      // A more robust solution would involve checking Gemini's direct response for errors.
      console.warn("AI generation returned a nullish output. Returning empty generated text.");
      return { generatedText: "" };
    }
    return output;
  }
);
